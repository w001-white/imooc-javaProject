package com.imooc.Java.staticUse.静态变量;

/**
 * @version 1.0
 * @Author 旺
 * @Date 2021/1/15 23:27
 * @注释：
 */
public class Test {
    // 静态成员:用static修饰的成员变量，通常也称为静态成员、静态属性、类成员、全局属性等。
    // 非静态成员: 没有被static修饰的成员变量，也称为叫做非静态成员、实例变量，实例成员，对象成员、对象属性等。
    // 静态成员:
    // 静态成员是属于整个类的，由类所进行维护，仅在类初次加载时会被初始化，在类销毁时回收。
    // 通过该类实例化的所有对象都共享类中静态资源，任一对象中信息的修订都将影响所有对象。
    // 由于静态成员在类加载期间就已经完成初始化，存储在Java Heap(JDK7.0之前存储在方法区）中静态存储区，因此优先于对象而存在，
    //        可以通过类名和对象名两种方式访问。
    // 非静态成员:
    // 非静态成员属于对象独有，每个对象进行实例化时产生各自的成员，随着对象的回收而释放。
    // 对象对各自成员信息的修订不影响其他对象
    // 只能通过对象名访问。
    public static void main(String[] args) {
        // 类外可应用"类名.成员名"或对象名.成员名"的方式访问非私有静态成员，更推荐用"类名.成员名"体现其特性。
        //       应用"对象名.成员名"时会出现警告，但不影响程序运行。
        // 类内可应用"类名.成员名"或"this.成员名"或"成员"的方式访问，应用"this.成员名"时会出现警告，但不影响程序运行。
        // 类外静态成员访问方式1:类名.成员名
        CarDemo.firm = "一起";
        CarDemo carDemo = new CarDemo(1);
        carDemo.display();

        carDemo.firm = "yiqi";
        carDemo.display();
    }
}
